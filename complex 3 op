// karmasik sayilar
#include <stdio.h>
#include <string.h>
typedef struct {
	float real;
	float im;
} complex_t;

void get_complex(complex_t* c) {
	printf("Lütfen real kısmı girin: ");
	scanf_s("%f", &((*c).real));
	printf("Lütfen sanal kısmı girin: ");
	scanf_s("%f", &((*c).im));
}

void print_complex(complex_t c) {
	if (c.im >= 0) {
		printf("(%f + %fi)", c.real, c.im);
	}
	else {
		printf("(%f %fi)", c.real, c.im);
	}
}

void sum_complex(complex_t c1, complex_t c2, complex_t* sum) {
	sum->real = c1.real + c2.real;
	sum->im = c1.im + c2.im;
}

void multi_complex(complex_t c1, complex_t c2, complex_t* result) {
	result->real = c1.real * c2.real - c1.im * c2.im;
	result->im = c1.real * c2.im + c1.im * c2.real;
}

void sub_complex(complex_t c1, complex_t c2, complex_t* result) {
	result->real = c1.real - c2.real;
	result->im = c1.im - c2.im;
}

int main(void) {

	complex_t c1,c2, result;
	get_complex(&c1);
	get_complex(&c2);

	char op;
	printf("Yapmak istediginiz islemi girin: ");
	//scanf_s(" %c", &op, 1);
	op = getchar(); // boslugu temizlemek icin
	op = getchar();
	printf("istediginiz islem: %c\n", op);

	switch (op) {
		case '+':
			sum_complex(c1, c2, &result);
			print_complex(c1);
			printf("  +  ");
			print_complex(c2);
			printf("  =  ");
			print_complex(result);
			break;
		case '*':
			multi_complex(c1, c2, &result);
			print_complex(c1);
			printf(" * ");
			break;
		case '-':
			sub_complex(c1, c2, &result);
			print_complex(c1);
			printf(" - ");
			break;
		default:
			printf("Gecersiz işlem");
			return 1;
	}



	return 0;
}
